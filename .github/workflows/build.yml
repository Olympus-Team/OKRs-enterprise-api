name: CI ðŸ”¥

on: pull_request

jobs:
  build:
    env:
      CI: true
      TERM: xterm-256color

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [12.x]
    runs-on: ${{ matrix.os }}

    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache diretory path
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        id: yarn-cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: yarn install

      - name: Copy file .env
        run: cp .env.example .env

      - name: Run Docker compose stack for CI
        run: docker-compose -f docker-compose.yml up -d

      - name: Check running containers
        run: docker ps -a

      - name: Check logs flame_db container
        run: docker logs flame_db

      - name: Exec in flame_db to set up the database
        run: |
          docker-exec -it flame_db /bin/sh
          yarn setup:db
          exit

      - name: Run Unit Test
        run: yarn test:cov

      - name: Upload Codecov report
        uses: codecov/codecov-action@v1.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit-tests
          name: devil-hunter
          file: ./coverage/coverage-final.json
          fail_ci_if_error: true
